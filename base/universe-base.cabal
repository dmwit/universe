name:                universe-base
version:             1.1
synopsis:            A class for finite and recursively enumerable types.
description:
  A class for finite and recursively enumerable types and some helper functions for enumerating them.
  .
  @
  class Universe a where universe :: [a]
  class Universe a => Finite a where universeF :: [a]; universeF = universe
  @
  .
  This is slim package definiting only the type-classes.
  For instances check @universe-instances-*@ packages.

homepage:            https://github.com/dmwit/universe
license:             BSD3
license-file:        LICENSE
author:              Daniel Wagner
maintainer:          me@dmwit.com
copyright:           2014 Daniel Wagner
category:            Data
build-type:          Simple
cabal-version:       >=1.10
tested-with:
  GHC==7.0.4,
  GHC==7.4.2,
  GHC==7.6.3,
  GHC==7.8.4,
  GHC==7.10.3,
  GHC==8.0.2,
  GHC==8.2.2,
  GHC==8.4.4,
  GHC==8.6.3

source-repository head
    type:            git
    location:        https://github.com/dmwit/universe
source-repository this
    type:            git
    location:        https://github.com/dmwit/universe
    tag:             base-1.1

library
  exposed-modules:     Data.Universe.Class, Data.Universe.Helpers
  other-extensions:    CPP
  build-depends:       base >=4 && <5
  default-language:    Haskell2010
  if impl(ghc >= 7.4)
    cpp-options:       -DDEFAULT_SIGNATURES
    other-extensions:  DefaultSignatures
  if impl(ghc >= 7.10)
    ghc-options:       -fno-warn-tabs
